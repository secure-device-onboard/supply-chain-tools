# Copyright 2020 Intel Corporation
# SPDX-License-Identifier: Apache 2.0

# This is an example script to demonstrate out-of-box execution of the component.
# Appropriate security measures with respect to key-store management and 
# configuration management should be considered while production deployment.
version: "2.4"

services:

  manufacturer:
    build:
      context: .
      dockerfile: Dockerfile-manufacturer
    image: manufacturer:1.9-SNAPSHOT
    container_name: manufacturer
    restart: on-failure:5
    ports:
      # If different port needs to be used for the manufacturer, modify it here.
      - "8039:8080"
    expose:
      - "8039"
    volumes:
      - ./keys:/keys:ro
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://manufacturer-mariadb:3306/sdo
      # This is an example implementation. This should be updated in production deployment.
      # Modify these variables to reflect your username and password.
      SPRING_DATASOURCE_USERNAME: sdo
      SPRING_DATASOURCE_PASSWORD: sdo
      # This is an example implementation. This should be updated in production deployment.
      # Modify these parameters to reflect your keystore path and password
      # Keys are stored on a shared volume, defined above, on your local hard disk.
      SDO_KEYSTORE: file:///keys/manufacturer-keystore.p12
      SDO_KEYSTORE_PASSWORD: MfgKs@3er
      # Uncomment and edit proxy configuration if your environment requires proxies.
      # http_proxy: http://yourProxy.yourCompany.com:80
      # https_proxy: http://yourProxy.yourCompany.com:443
      # Change TZ (timezone) to reflect your location.
      TZ: Asia/Kolkata
      # CATALINA_OPTS: -D<add any additional tomcat options here, if needed>
    healthcheck:
      # Modify port here if it was changed above.
      test: curl -f http://localhost:8080/api/version || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      manufacturer-mariadb:
        condition: service_healthy
    mem_limit: 500m
    mem_reservation: 200m
    cpu_shares: 5
    pids_limit: 100
    networks:
      - manufacturer_network

  manufacturer-mariadb:
    build:
      context: .
      dockerfile: Dockerfile-mariadb
      # Uncomment and edit proxy configuration if your environment requires proxies.
      # args:
        # http_proxy: http://yourProxy.yourCompany.com:80
        # https_proxy: http://yourProxy.yourCompany.com:443
    image: manufacturer-mariadb:1.9-SNAPSHOT
    container_name: manufacturer-mariadb
    restart: on-failure:5
    ports:
      - "3306:3306"
    expose:
      - "3306"
    environment:
      MYSQL_DATABASE: sdo
      # This is an example implementation. This should be updated in production deployment.
      # Modify these variables to reflect your configuration. Update the same in 
      # the healthcheck..
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: sdo
      MYSQL_PASSWORD: sdo
      # Uncomment and edit proxy configuration if your environment requires proxies.
      # http_proxy: http://yourProxy.yourCompany.com:80
      # https_proxy: http://yourProxy.yourCompany.com:443
      # Change TZ (timezone) to reflect your location.
      TZ: Asia/Kolkata
    healthcheck:
      # Modify user/password to match your configuration. Update the same in Docker-mariadb.
      test: mysql --user=sdo --password=sdo -e 'use sdo; select * from v_rt_customer_public_key;'
      interval: 30s
      timeout: 10s
      retries: 5
    mem_limit: 300m
    mem_reservation: 100m
    cpu_shares: 5
    pids_limit: 100
    networks:
      - manufacturer_network

networks:
  manufacturer_network:
    driver: bridge
    name: manufacturer_network
